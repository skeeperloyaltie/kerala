"""
Django settings for kerala project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


import os

SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'default-insecure-key')
DEBUG = os.getenv('DJANGO_DEBUG', 'True') == 'True'

CORS_ALLOWED_ORIGINS = [
    'http://localhost',  # Example: React frontend during development
    'http://127.0.0.1:8000',
    'https://104.37.187.187:8000',

]
from corsheaders.defaults import default_headers

CORS_ALLOW_HEADERS = list(default_headers) + [
    'Username',  # Add the 'Username' header here
]

CORS_ALLOW_ALL_ORIGINS = DEBUG  # Allow all origins only when DEBUG is True

ALLOWED_HOSTS = ['smarthospitalmaintain.com', 'www.smarthospitalmaintain.com', '104.37.187,187']

CSRF_TRUSTED_ORIGINS = [
    "http://localhost",
    "http://127.0.0.1",
    "https://104.37.187.187",
    "http://104.37.187.187"  # Add both HTTP and HTTPS
    "http://smarthospitalmaintain.com",
    "http://www.smarthospitalmaintain.com",
    "https://smarthospitalmaintain.com",
    "https://www.smarthospitalmaintain.com",
]


CSRF_COOKIE_NAME = "csrftoken"
CSRF_COOKIE_SECURE = False  # Set True in production if using HTTPS
CSRF_COOKIE_SAMESITE = "Lax"  # Prevents cross-site issues
CSRF_USE_SESSIONS = False
SESSION_COOKIE_SAMESITE = "Lax"

# Application definition

INSTALLED_APPS = [
    # Core Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'rest_framework.authtoken',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'users',
    'appointments',
    'cookie',
    'info',
    'monitor',
]



AUTH_USER_MODEL = 'users.User'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Add this at the top
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'kerala.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Ensure your templates directory is correctly set up
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kerala.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': os.getenv('POSTGRES_DB', 'kerala'),
#         'USER': os.getenv('POSTGRES_USER', 'postgres'),
#         'PASSWORD': os.getenv('POSTGRES_PASSWORD', '1391'),
#         'HOST': os.getenv('POSTGRES_HOST', 'db'),
#         'PORT': os.getenv('POSTGRES_PORT', '5432'),
#     }
# }
DATABASES = {
    "default": {
        'ENGINE': 'django.db.backends.postgresql',
        "NAME": os.environ.get('DATABASE_NAME', 'kerala'),  # Default to 'flips'
        "USER": os.environ.get('DATABASE_USER', 'postgres'),  # Default to 'flipsintel'
        "PASSWORD": os.environ.get('DATABASE_PASSWORD', '1391'),  # Default to '1391'
        "HOST": os.environ.get('DATABASE_HOST', 'db'),  # Use 'db' to connect to the Docker container
        "PORT": os.environ.get('DATABASE_PORT', '5432'),  # Default PostgreSQL port
    },
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "gugod254@gmail.com"
EMAIL_HOST_PASSWORD = "payurdbuxicjzkqf"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # For collecting static files during deployment
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # For local static files in development

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
